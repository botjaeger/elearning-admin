security:
    role_hierarchy:
        ROLE_STUDENT: [ROLE_PARENT, ROLE_USER]
        ROLE_TEACHER: [ROLE_TEACHER]
        ROLE_ADMIN: [ROLE_ADMIN]

    encoders:
        App\Entity\User:
            algorithm: bcrypt
            cost: 12
        App\Entity\Student:
            algorithm: bcrypt
            cost: 12
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12


    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        elearner_user_provider:
            entity:
                class: App\Entity\User
                property: uuid
        # used to reload user from session & other features (e.g. switch_user)
        elearner_student_provider:
            entity:
                class: App\Entity\Student
                property: uuid
        elearner_default:
            memory:
                users:
                    admin: { password: '$2y$12$c.6oj4SkPYc4yw0INtT0m.vt2XmQbuul1ChdHrOO4Owz2pAmVfyFy', roles: [ "ROLE_ADMIN" ] }

        elearner_multiple:
            chain:
                providers: [elearner_default, elearner_user_provider]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            provider: elearner_student_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            provider: elearner_student_provider
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: ~
            provider: elearner_multiple
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api,       roles: [IS_AUTHENTICATED_FULLY] }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin,       roles: [IS_AUTHENTICATED_FULLY, ROLE_ADMIN, ROLE_TEACHER] }
